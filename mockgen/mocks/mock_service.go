// Code generated by MockGen. DO NOT EDIT.
// Source: mocking/service/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSpeaker is a mock of Speaker interface.
type MockSpeaker struct {
	ctrl     *gomock.Controller
	recorder *MockSpeakerMockRecorder
}

// MockSpeakerMockRecorder is the mock recorder for MockSpeaker.
type MockSpeakerMockRecorder struct {
	mock *MockSpeaker
}

// NewMockSpeaker creates a new mock instance.
func NewMockSpeaker(ctrl *gomock.Controller) *MockSpeaker {
	mock := &MockSpeaker{ctrl: ctrl}
	mock.recorder = &MockSpeakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpeaker) EXPECT() *MockSpeakerMockRecorder {
	return m.recorder
}

// Speak mocks base method.
func (m *MockSpeaker) Speak(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Speak", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Speak indicates an expected call of Speak.
func (mr *MockSpeakerMockRecorder) Speak(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Speak", reflect.TypeOf((*MockSpeaker)(nil).Speak), arg0)
}
